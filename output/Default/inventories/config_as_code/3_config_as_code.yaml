---
controller_inventories:
  - name: "config_as_code"
    description: ""
    organization: "Default"
    host_filter: ""
    prevent_instance_group_fallback: False
    variables:
      aap_setup_down_offline_token: !unsafe '{{ offline_token }}'
      aap_setup_down_version: 2.4
      aap_setup_inst_extra_vars:
        create_preload_data: false
      aap_setup_inst_force: true
      aap_setup_prep_inv_nodes:
        automationcontroller: !unsafe '{{ groups[''automationcontroller''] }}'
        automationedacontroller: !unsafe '{{ groups[''automationedacontroller''] }}'
        automationhub: !unsafe '{{ groups[''automationhub''] }}'
        database: !unsafe '{{ groups[''database''] | default(omit) }}'
      aap_setup_prep_inv_secrets: null
      aap_setup_prep_inv_vars:
        all:
          admin_password: !unsafe '{{ ansible_password | default(''Password1234!'') }}'
          automationedacontroller_admin_password: !unsafe '{{ ansible_password | default(''Password1234!'')
            }}'
          automationedacontroller_pg_database: !unsafe '{{ ah_db_host | default(aap_setup_prep_inv_nodes[''database''][1])
            | default(aap_setup_prep_inv_nodes[''database''][0]) }}'
          automationedacontroller_pg_host: !unsafe '{{ aap_db_host | default(aap_setup_prep_inv_nodes[''database''][0])
            }}'
          automationedacontroller_pg_password: !unsafe '{{ ansible_password | default(''Password1234!'')
            }}'
          automationedacontroller_pg_port: '5432'
          automationedacontroller_pg_username: automationedacontroller
          automationhub_admin_password: !unsafe '{{ ansible_password | default(''Password1234!'')
            }}'
          automationhub_pg_database: automationhub
          automationhub_pg_host: !unsafe '{{ ah_db_host | default(aap_setup_prep_inv_nodes[''database''][1])
            | default(aap_setup_prep_inv_nodes[''database''][0]) }}'
          automationhub_pg_password: !unsafe '{{ ansible_password | default(''Password1234!'') }}'
          automationhub_pg_port: '5432'
          automationhub_pg_sslmode: prefer
          automationhub_pg_username: automationhub
          automationhub_require_content_approval: true
          pg_database: awx
          pg_host: !unsafe '{{ aap_db_host | default(aap_setup_prep_inv_nodes[''database''][0])
            }}'
          pg_password: !unsafe '{{ ansible_password | default(''Password1234!'') }}'
          pg_port: '5432'
          pg_sslmode: prefer
          pg_username: awx
          postgres_use_ssl: false
          pulp_rhel_codeready_repo: []
          registry_password: !unsafe '{{ aap_setup_prep_registry_password | default(ansible_password)
            | default(''Password1234!'') }}'
          registry_url: !unsafe '{{ aap_setup_prep_registry_url | default(aap_setup_prep_inv_nodes[''automationhub''][0])
            }}'
          registry_username: !unsafe '{{ aap_setup_prep_registry_username | default(''admin'') }}'
      aap_setup_rhel_version: 8
      ah_auto_approve: true
      ah_collection_remotes:
      - auth_url: https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token
        name: rh-certified
        token: !unsafe '{{ cloud_token }}'
        url: https://console.redhat.com/api/automation-hub/content/published/
      - auth_url: https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token
        name: validated
        token: !unsafe '{{ cloud_token }}'
        url: https://console.redhat.com/api/automation-hub/content/validated/
      - name: community
        requirements:
        - infra.ah_configuration
        - infra.controller_configuration
        - infra.aap_utilities
        - infra.ee_utilities
        - containers.podman
        - awx.awx
        - ansible.posix
        - community.docker
        - community.general
        - community.crypto
        - cloud.terraform
        url: https://galaxy.ansible.com/api/
      ah_collection_repositories:
      - name: rh-certified
        remote: rh-certified
      - name: validated
        remote: validated
      - name: community
        remote: community
      ah_collections:
      - collection_name: test
        git_url: https://github.com/sean-m-sullivan/collection_test.git
      ah_ee_images: []
      ah_ee_namespaces: []
      ah_ee_registries: []
      ah_ee_repositories: []
      ah_group_roles: []
      ah_groups:
      - name: admin
        state: present
      ah_host: !unsafe '{{ ah_hostname | default(groups[''automationhub''][0]) }}:{{ ah_port | default(443)
        }}'
      ah_hostname: !unsafe '{{ aap_setup_prep_inv_nodes[''automationhub''][0] }}'
      ah_namespaces:
      - avatar_url: https://static.redhat.com/libs/redhat/brand-assets/latest/corp/logo.svg
        company: Ansible by Red Hat
        description: Namespace to test publishing collections
        email: ddaniels@redhat.com
        links:
        - name: Red Hat
          url: https://www.redhat.com
        name: community_test
        resources: '# Redhat CoP

          A Namespace to test publishing collections'
      ah_password: !unsafe '{{ ah_pass }}'
      ah_path_prefix: galaxy
      ah_token_username: token_user
      ah_username: !unsafe '{{ ah_user | default(''admin'') }}'
      ah_users:
      - append: true
        is_superuser: true
        password: !unsafe '{{ ah_token_password }}'
        state: present
        username: token_user
      ah_validate_certs: false
      ah_verify_ssl: false
      controller_applications_all:
      - authorization_grant_type: password
        client_type: confidential
        description: launch controller config job template
        name: config_as_code_api
        organization: config_as_code
      controller_credential_input_sources_all: []
      controller_credential_types_all:
      - description: automation hub
        injectors:
          env:
            AH_API_TOKEN:
              __ansible_unsafe: !unsafe '{{ token }}'
            AH_HOST:
              __ansible_unsafe: !unsafe '{{ hostname }}'
            AH_PASSWORD:
              __ansible_unsafe: !unsafe '{{ password }}'
            AH_USERNAME:
              __ansible_unsafe: !unsafe '{{ username }}'
            AH_VERIFY_SSL:
              __ansible_unsafe: !unsafe '{{ verify_ssl }}'
          extra_vars:
            ah_host:
              __ansible_unsafe: !unsafe '{{ hostname }}'
            ah_password:
              __ansible_unsafe: !unsafe '{{ password }}'
            ah_token:
              __ansible_unsafe: !unsafe '{{ token }}'
            ah_username:
              __ansible_unsafe: !unsafe '{{ username }}'
            ah_validate_certs:
              __ansible_unsafe: !unsafe '{{ verify_ssl }}'
        inputs:
          fields:
          - id: verify_ssl
            label: Verify SSL
            type: boolean
          - id: hostname
            label: Hostname
            type: string
          - id: username
            label: Username
            type: string
          - id: password
            label: Password
            secret: true
            type: string
          - id: token
            label: Token
            secret: true
            type: string
          required:
          - hostname
        kind: cloud
        name: automation_hub
      - description: creates temp ssh priv key to use (cannot have passphrase)
        injectors:
          env:
            MY_CERT_FILE_PATH:
              __ansible_unsafe: !unsafe '{{ tower.filename.cert_file }}'
          file:
            template.cert_file:
              __ansible_unsafe: !unsafe '{{ priv_key }}'
        inputs:
          fields:
          - format: ssh_private_key
            id: priv_key
            label: Certificate
            multiline: true
            secret: true
            type: string
        kind: cloud
        name: ssh_priv_file
      controller_credentials_all: []
      controller_execution_environments_all:
      - credential: cr_ah
        image: !unsafe '{{ ah_host }}/ee-supported-rhel8'
        name: supported
        pull: always
      - credential: cr_ah
        image: !unsafe '{{ ah_host }}/ee-minimal-rhel8'
        name: minimal
        pull: always
      - credential: cr_ah
        image: !unsafe '{{ ah_host }}/ee-29-rhel8'
        name: old_29_ee
        pull: always
      controller_groups_all: []
      controller_hostname: !unsafe '{{ controller_host | default(groups[''automationcontroller''][0])
        }}:{{ controller_port | default(443) }}'
      controller_hosts_all: []
      controller_instance_groups_all: []
      controller_inventories_all:
      - description: inventory for configuring as code
        name: config_as_code
        organization: config_as_code
      controller_inventory_sources_all:
      - credential: ''
        inventory: config_as_code
        name: config_as_code_source
        organization: config_as_code
        overwrite: true
        overwrite_vars: true
        source: scm
        source_path: inventory_{{ env }}.yml
        source_project: config_as_code
        update_cache_timeout: 0
      controller_labels_all:
      - name: EE
        organization: config_as_code
      controller_notifications_all: []
      controller_organizations_all:
      - galaxy_credentials:
        - ah_published
        - ah_certified
        - ah_validated
        - ah_community
        name: config_as_code
      controller_password: !unsafe '{{ controller_pass }}'
      controller_projects_all:
      - description: config as code project
        name: config_as_code
        organization: config_as_code
        scm_branch: !unsafe '{{ scm_branch }}'
        scm_clean: true
        scm_credential: ''
        scm_type: git
        scm_update_on_launch: false
        scm_url: https://github.com/redhat-cop/aap_configuration_template.git
        update_project: true
        wait: true
      controller_roles_all:
      - organization: config_as_code
        role: execute
        team: config_as_code_admin
      - role: member
        team: config_as_code_admin
        user: api_user
      controller_schedules_all:
      - description: Auto run refresh token every 25 days
        name: auto_run_console_token_refresh
        rrule: DTSTART:20191219T130500Z RRULE:INTERVAL=25;FREQ=DAILY
        unified_job_template: console_token_refresh
      - description: Auto run sync every 7 days
        name: auto_run_collection_sync
        rrule: DTSTART:20191219T130500Z RRULE:INTERVAL=7;FREQ=DAILY
        unified_job_template: collection_sync
      controller_settings_all:
        settings:
          ACTIVITY_STREAM_ENABLED: true
          ACTIVITY_STREAM_ENABLED_FOR_INVENTORY_SYNC: true
          AD_HOC_COMMANDS:
          - command
          - shell
          - yum
          - apt
          - apt_key
          - apt_repository
          - apt_rpm
          - service
          - group
          - user
          - mount
          - ping
          - selinux
          - setup
          - win_ping
          - win_service
          - win_updates
          - win_group
          - win_user
          ALLOW_JINJA_IN_EXTRA_VARS: template
          ALLOW_METRICS_FOR_ANONYMOUS_USERS: false
          ALLOW_OAUTH2_FOR_EXTERNAL_USERS: false
          ANSIBLE_FACT_CACHE_TIMEOUT: 0
          API_400_ERROR_LOG_FORMAT: status {status_code} received by user {user_name} attempting
            to access {url_path} from {remote_addr}
          AUTHENTICATION_BACKENDS:
          - awx.sso.backends.LDAPBackend
          - awx.sso.backends.TACACSPlusBackend
          - awx.main.backends.AWXModelBackend
          AUTH_BASIC_ENABLED: true
          AUTH_LDAP_1_BIND_DN: ''
          AUTH_LDAP_1_CONNECTION_OPTIONS:
            OPT_NETWORK_TIMEOUT: 30
            OPT_REFERRALS: 0
          AUTH_LDAP_1_DENY_GROUP: null
          AUTH_LDAP_1_GROUP_SEARCH: []
          AUTH_LDAP_1_GROUP_TYPE: MemberDNGroupType
          AUTH_LDAP_1_GROUP_TYPE_PARAMS:
            member_attr: member
            name_attr: cn
          AUTH_LDAP_1_ORGANIZATION_MAP: {}
          AUTH_LDAP_1_REQUIRE_GROUP: null
          AUTH_LDAP_1_SERVER_URI: ''
          AUTH_LDAP_1_START_TLS: false
          AUTH_LDAP_1_TEAM_MAP: {}
          AUTH_LDAP_1_USER_ATTR_MAP: {}
          AUTH_LDAP_1_USER_DN_TEMPLATE: null
          AUTH_LDAP_1_USER_FLAGS_BY_GROUP: {}
          AUTH_LDAP_1_USER_SEARCH: []
          AUTH_LDAP_2_BIND_DN: ''
          AUTH_LDAP_2_CONNECTION_OPTIONS:
            OPT_NETWORK_TIMEOUT: 30
            OPT_REFERRALS: 0
          AUTH_LDAP_2_DENY_GROUP: null
          AUTH_LDAP_2_GROUP_SEARCH: []
          AUTH_LDAP_2_GROUP_TYPE: MemberDNGroupType
          AUTH_LDAP_2_GROUP_TYPE_PARAMS:
            member_attr: member
            name_attr: cn
          AUTH_LDAP_2_ORGANIZATION_MAP: {}
          AUTH_LDAP_2_REQUIRE_GROUP: null
          AUTH_LDAP_2_SERVER_URI: ''
          AUTH_LDAP_2_START_TLS: false
          AUTH_LDAP_2_TEAM_MAP: {}
          AUTH_LDAP_2_USER_ATTR_MAP: {}
          AUTH_LDAP_2_USER_DN_TEMPLATE: null
          AUTH_LDAP_2_USER_FLAGS_BY_GROUP: {}
          AUTH_LDAP_2_USER_SEARCH: []
          AUTH_LDAP_3_BIND_DN: ''
          AUTH_LDAP_3_CONNECTION_OPTIONS:
            OPT_NETWORK_TIMEOUT: 30
            OPT_REFERRALS: 0
          AUTH_LDAP_3_DENY_GROUP: null
          AUTH_LDAP_3_GROUP_SEARCH: []
          AUTH_LDAP_3_GROUP_TYPE: MemberDNGroupType
          AUTH_LDAP_3_GROUP_TYPE_PARAMS:
            member_attr: member
            name_attr: cn
          AUTH_LDAP_3_ORGANIZATION_MAP: {}
          AUTH_LDAP_3_REQUIRE_GROUP: null
          AUTH_LDAP_3_SERVER_URI: ''
          AUTH_LDAP_3_START_TLS: false
          AUTH_LDAP_3_TEAM_MAP: {}
          AUTH_LDAP_3_USER_ATTR_MAP: {}
          AUTH_LDAP_3_USER_DN_TEMPLATE: null
          AUTH_LDAP_3_USER_FLAGS_BY_GROUP: {}
          AUTH_LDAP_3_USER_SEARCH: []
          AUTH_LDAP_4_BIND_DN: ''
          AUTH_LDAP_4_CONNECTION_OPTIONS:
            OPT_NETWORK_TIMEOUT: 30
            OPT_REFERRALS: 0
          AUTH_LDAP_4_DENY_GROUP: null
          AUTH_LDAP_4_GROUP_SEARCH: []
          AUTH_LDAP_4_GROUP_TYPE: MemberDNGroupType
          AUTH_LDAP_4_GROUP_TYPE_PARAMS:
            member_attr: member
            name_attr: cn
          AUTH_LDAP_4_ORGANIZATION_MAP: {}
          AUTH_LDAP_4_REQUIRE_GROUP: null
          AUTH_LDAP_4_SERVER_URI: ''
          AUTH_LDAP_4_START_TLS: false
          AUTH_LDAP_4_TEAM_MAP: {}
          AUTH_LDAP_4_USER_ATTR_MAP: {}
          AUTH_LDAP_4_USER_DN_TEMPLATE: null
          AUTH_LDAP_4_USER_FLAGS_BY_GROUP: {}
          AUTH_LDAP_4_USER_SEARCH: []
          AUTH_LDAP_5_BIND_DN: ''
          AUTH_LDAP_5_CONNECTION_OPTIONS:
            OPT_NETWORK_TIMEOUT: 30
            OPT_REFERRALS: 0
          AUTH_LDAP_5_DENY_GROUP: null
          AUTH_LDAP_5_GROUP_SEARCH: []
          AUTH_LDAP_5_GROUP_TYPE: MemberDNGroupType
          AUTH_LDAP_5_GROUP_TYPE_PARAMS:
            member_attr: member
            name_attr: cn
          AUTH_LDAP_5_ORGANIZATION_MAP: {}
          AUTH_LDAP_5_REQUIRE_GROUP: null
          AUTH_LDAP_5_SERVER_URI: ''
          AUTH_LDAP_5_START_TLS: false
          AUTH_LDAP_5_TEAM_MAP: {}
          AUTH_LDAP_5_USER_ATTR_MAP: {}
          AUTH_LDAP_5_USER_DN_TEMPLATE: null
          AUTH_LDAP_5_USER_FLAGS_BY_GROUP: {}
          AUTH_LDAP_5_USER_SEARCH: []
          AUTH_LDAP_BIND_DN: cn=admin,dc=example,dc=com
          AUTH_LDAP_CONNECTION_OPTIONS:
            OPT_NETWORK_TIMEOUT: 30
            OPT_REFERRALS: 0
          AUTH_LDAP_DENY_GROUP: null
          AUTH_LDAP_GROUP_SEARCH: []
          AUTH_LDAP_GROUP_TYPE: PosixGroupType
          AUTH_LDAP_GROUP_TYPE_PARAMS: {}
          AUTH_LDAP_ORGANIZATION_MAP: {}
          AUTH_LDAP_REQUIRE_GROUP: null
          AUTH_LDAP_SERVER_URI: ldaps://192.168.0.232:389
          AUTH_LDAP_START_TLS: false
          AUTH_LDAP_TEAM_MAP: {}
          AUTH_LDAP_USER_ATTR_MAP: {}
          AUTH_LDAP_USER_DN_TEMPLATE: null
          AUTH_LDAP_USER_FLAGS_BY_GROUP: {}
          AUTH_LDAP_USER_SEARCH: []
          AUTOMATION_ANALYTICS_GATHER_INTERVAL: 14400
          AUTOMATION_ANALYTICS_LAST_ENTRIES: ''
          AUTOMATION_ANALYTICS_LAST_GATHER: null
          AWX_ANSIBLE_CALLBACK_PLUGINS: []
          AWX_COLLECTIONS_ENABLED: true
          AWX_ISOLATION_BASE_PATH: /tmp
          AWX_ISOLATION_SHOW_PATHS:
          - /etc/pki/ca-trust:/etc/pki/ca-trust:O
          - /usr/share/pki:/usr/share/pki:O
          AWX_MOUNT_ISOLATED_PATHS_ON_K8S: false
          AWX_ROLES_ENABLED: true
          AWX_RUNNER_KEEPALIVE_SECONDS: 0
          AWX_SHOW_PLAYBOOK_LINKS: false
          AWX_TASK_ENV: {}
          CSRF_TRUSTED_ORIGINS: []
          CUSTOM_LOGO: ''
          CUSTOM_VENV_PATHS: []
          DEFAULT_CONTAINER_RUN_OPTIONS:
          - --network
          - slirp4netns:enable_ipv6=true
          DEFAULT_INVENTORY_UPDATE_TIMEOUT: 0
          DEFAULT_JOB_IDLE_TIMEOUT: 0
          DEFAULT_JOB_TIMEOUT: 0
          DEFAULT_PROJECT_UPDATE_TIMEOUT: 0
          DISABLE_LOCAL_AUTH: false
          EVENT_STDOUT_MAX_BYTES_DISPLAY: 1024
          GALAXY_IGNORE_CERTS: true
          GALAXY_TASK_ENV:
            ANSIBLE_FORCE_COLOR: 'false'
            GIT_SSH_COMMAND: ssh -o StrictHostKeyChecking=no
          INSIGHTS_TRACKING_STATE: false
          IS_K8S: false
          LOCAL_PASSWORD_MIN_DIGITS: 0
          LOCAL_PASSWORD_MIN_LENGTH: 0
          LOCAL_PASSWORD_MIN_SPECIAL: 0
          LOCAL_PASSWORD_MIN_UPPER: 0
          LOGIN_REDIRECT_OVERRIDE: ''
          LOG_AGGREGATOR_ACTION_MAX_DISK_USAGE_GB: 1
          LOG_AGGREGATOR_ACTION_QUEUE_SIZE: 131072
          LOG_AGGREGATOR_ENABLED: true
          LOG_AGGREGATOR_HOST: https://192.168.0.232:8088/services/collector/event
          LOG_AGGREGATOR_INDIVIDUAL_FACTS: false
          LOG_AGGREGATOR_LEVEL: INFO
          LOG_AGGREGATOR_LOGGERS:
          - awx
          - activity_stream
          - job_events
          - system_tracking
          - broadcast_websocket
          LOG_AGGREGATOR_MAX_DISK_USAGE_PATH: /var/lib/awx
          LOG_AGGREGATOR_PASSWORD: ''
          LOG_AGGREGATOR_PORT: null
          LOG_AGGREGATOR_PROTOCOL: https
          LOG_AGGREGATOR_RSYSLOGD_DEBUG: false
          LOG_AGGREGATOR_TCP_TIMEOUT: 5
          LOG_AGGREGATOR_TOWER_UUID: ''
          LOG_AGGREGATOR_TYPE: splunk
          LOG_AGGREGATOR_USERNAME: ''
          LOG_AGGREGATOR_VERIFY_CERT: false
          MANAGE_ORGANIZATION_AUTH: true
          MAX_FORKS: 200
          MAX_UI_JOB_EVENTS: 4000
          MAX_WEBSOCKET_EVENT_RATE: 30
          OAUTH2_PROVIDER:
            ACCESS_TOKEN_EXPIRE_SECONDS: 31536000000
            AUTHORIZATION_CODE_EXPIRE_SECONDS: 600
            REFRESH_TOKEN_EXPIRE_SECONDS: 2628000
          ORG_ADMINS_CAN_SEE_ALL_USERS: true
          PENDO_TRACKING_STATE: detailed
          PROJECT_UPDATE_VVV: false
          PROXY_IP_ALLOWED_LIST: []
          RADIUS_PORT: 1812
          RADIUS_SERVER: ''
          REDHAT_USERNAME: ''
          REMOTE_HOST_HEADERS:
          - '192.168'
          - davidaap
          SAML_AUTO_CREATE_OBJECTS: true
          SCHEDULE_MAX_JOBS: 10
          SESSIONS_PER_USER: -1
          SESSION_COOKIE_AGE: 1800
          SOCIAL_AUTH_AZUREAD_OAUTH2_CALLBACK_URL: https://aap/sso/complete/azuread-oauth2/
          SOCIAL_AUTH_AZUREAD_OAUTH2_KEY: ''
          SOCIAL_AUTH_AZUREAD_OAUTH2_ORGANIZATION_MAP: null
          SOCIAL_AUTH_AZUREAD_OAUTH2_TEAM_MAP: null
          SOCIAL_AUTH_GITHUB_ENTERPRISE_API_URL: ''
          SOCIAL_AUTH_GITHUB_ENTERPRISE_CALLBACK_URL: https://aap/sso/complete/github-enterprise/
          SOCIAL_AUTH_GITHUB_ENTERPRISE_KEY: ''
          SOCIAL_AUTH_GITHUB_ENTERPRISE_ORGANIZATION_MAP: null
          SOCIAL_AUTH_GITHUB_ENTERPRISE_ORG_API_URL: ''
          SOCIAL_AUTH_GITHUB_ENTERPRISE_ORG_CALLBACK_URL: https://aap/sso/complete/github-enterprise-org/
          SOCIAL_AUTH_GITHUB_ENTERPRISE_ORG_KEY: ''
          SOCIAL_AUTH_GITHUB_ENTERPRISE_ORG_NAME: ''
          SOCIAL_AUTH_GITHUB_ENTERPRISE_ORG_ORGANIZATION_MAP: null
          SOCIAL_AUTH_GITHUB_ENTERPRISE_ORG_TEAM_MAP: null
          SOCIAL_AUTH_GITHUB_ENTERPRISE_ORG_URL: ''
          SOCIAL_AUTH_GITHUB_ENTERPRISE_TEAM_API_URL: ''
          SOCIAL_AUTH_GITHUB_ENTERPRISE_TEAM_CALLBACK_URL: https://aap/sso/complete/github-enterprise-team/
          SOCIAL_AUTH_GITHUB_ENTERPRISE_TEAM_ID: ''
          SOCIAL_AUTH_GITHUB_ENTERPRISE_TEAM_KEY: ''
          SOCIAL_AUTH_GITHUB_ENTERPRISE_TEAM_MAP: null
          SOCIAL_AUTH_GITHUB_ENTERPRISE_TEAM_ORGANIZATION_MAP: null
          SOCIAL_AUTH_GITHUB_ENTERPRISE_TEAM_TEAM_MAP: null
          SOCIAL_AUTH_GITHUB_ENTERPRISE_TEAM_URL: ''
          SOCIAL_AUTH_GITHUB_ENTERPRISE_URL: ''
          SOCIAL_AUTH_GITHUB_KEY: ''
          SOCIAL_AUTH_GITHUB_ORGANIZATION_MAP: null
          SOCIAL_AUTH_GITHUB_ORG_CALLBACK_URL: https://aap/sso/complete/github-org/
          SOCIAL_AUTH_GITHUB_ORG_KEY: ''
          SOCIAL_AUTH_GITHUB_ORG_NAME: davit
          SOCIAL_AUTH_GITHUB_ORG_ORGANIZATION_MAP: null
          SOCIAL_AUTH_GITHUB_ORG_TEAM_MAP: null
          SOCIAL_AUTH_GITHUB_TEAM_CALLBACK_URL: https://aap/sso/complete/github-team/
          SOCIAL_AUTH_GITHUB_TEAM_ID: ''
          SOCIAL_AUTH_GITHUB_TEAM_KEY: ''
          SOCIAL_AUTH_GITHUB_TEAM_MAP: null
          SOCIAL_AUTH_GITHUB_TEAM_ORGANIZATION_MAP: null
          SOCIAL_AUTH_GITHUB_TEAM_TEAM_MAP: null
          SOCIAL_AUTH_GOOGLE_OAUTH2_AUTH_EXTRA_ARGUMENTS: {}
          SOCIAL_AUTH_GOOGLE_OAUTH2_CALLBACK_URL: https://aap/sso/complete/google-oauth2/
          SOCIAL_AUTH_GOOGLE_OAUTH2_KEY: ''
          SOCIAL_AUTH_GOOGLE_OAUTH2_ORGANIZATION_MAP: null
          SOCIAL_AUTH_GOOGLE_OAUTH2_TEAM_MAP: null
          SOCIAL_AUTH_GOOGLE_OAUTH2_WHITELISTED_DOMAINS: []
          SOCIAL_AUTH_OIDC_KEY: null
          SOCIAL_AUTH_OIDC_OIDC_ENDPOINT: ''
          SOCIAL_AUTH_OIDC_VERIFY_SSL: true
          SOCIAL_AUTH_ORGANIZATION_MAP: null
          SOCIAL_AUTH_SAML_CALLBACK_URL: https://aap/sso/complete/saml/
          SOCIAL_AUTH_SAML_ENABLED_IDPS: {}
          SOCIAL_AUTH_SAML_EXTRA_DATA: null
          SOCIAL_AUTH_SAML_METADATA_URL: https://aap/sso/metadata/saml/
          SOCIAL_AUTH_SAML_ORGANIZATION_ATTR: {}
          SOCIAL_AUTH_SAML_ORGANIZATION_MAP: null
          SOCIAL_AUTH_SAML_ORG_INFO: {}
          SOCIAL_AUTH_SAML_SECURITY_CONFIG:
            requestedAuthnContext: false
          SOCIAL_AUTH_SAML_SP_ENTITY_ID: ''
          SOCIAL_AUTH_SAML_SP_EXTRA: null
          SOCIAL_AUTH_SAML_SP_PRIVATE_KEY: ''
          SOCIAL_AUTH_SAML_SP_PUBLIC_CERT: ''
          SOCIAL_AUTH_SAML_SUPPORT_CONTACT: {}
          SOCIAL_AUTH_SAML_TEAM_ATTR: {}
          SOCIAL_AUTH_SAML_TEAM_MAP: null
          SOCIAL_AUTH_SAML_TECHNICAL_CONTACT: {}
          SOCIAL_AUTH_SAML_USER_FLAGS_BY_ATTR: {}
          SOCIAL_AUTH_TEAM_MAP: null
          SOCIAL_AUTH_USERNAME_IS_FULL_EMAIL: false
          SOCIAL_AUTH_USER_FIELDS: null
          STDOUT_MAX_BYTES_DISPLAY: 1048576
          SUBSCRIPTIONS_USERNAME: ''
          TACACSPLUS_AUTH_PROTOCOL: ascii
          TACACSPLUS_HOST: ''
          TACACSPLUS_PORT: 49
          TACACSPLUS_REM_ADDR: false
          TACACSPLUS_SESSION_TIMEOUT: 5
          TOWER_URL_BASE: https://aap
          UI_LIVE_UPDATES_ENABLED: true
          UI_NEXT: true
      controller_teams_all:
      - name: config_as_code_admin
        organization: config_as_code
      controller_templates_all:
      - ask_variables_on_launch: true
        concurrent_jobs_enabled: false
        credentials:
        - aap_admin
        - ah_token_user
        - vault
        execution_environment: supported
        extra_vars:
          controller_configuration_credentials_secure_logging: true
        inventory: config_as_code
        job_type: run
        limit: !unsafe '{{ env }}'
        name: controller_config
        playbook: playbooks/controller_config.yml
        project: config_as_code
        verbosity: 0
      - concurrent_jobs_enabled: false
        credentials:
        - ah_token_user
        - vault
        execution_environment: supported
        inventory: config_as_code
        job_type: run
        limit: !unsafe '{{ env }}'
        name: ah_config
        playbook: playbooks/hub_config.yml
        project: config_as_code
        verbosity: 0
      - ask_variables_on_launch: true
        concurrent_jobs_enabled: false
        credentials:
        - vault
        execution_environment: supported
        inventory: config_as_code
        job_type: run
        limit: !unsafe '{{ env }}'
        name: eda_config
        playbook: playbooks/eda_config.yml
        project: config_as_code
        verbosity: 0
      - concurrent_jobs_enabled: false
        credentials:
        - root
        - ah_admin_user_pass
        execution_environment: supported
        inventory: config_as_code
        job_type: run
        labels:
        - EE
        name: build_execution_environments
        playbook: playbooks/build_ee.yml
        project: config_as_code
        verbosity: 0
      - concurrent_jobs_enabled: false
        credentials:
        - root
        - ah_token_user
        execution_environment: supported
        inventory: config_as_code
        job_type: run
        limit: !unsafe '{{ env }}'
        name: build_custom_collections
        playbook: playbooks/custom_collection.yml
        project: config_as_code
        verbosity: 0
      - concurrent_jobs_enabled: false
        credentials:
        - vault
        execution_environment: minimal
        inventory: config_as_code
        job_type: run
        limit: !unsafe '{{ env }}'
        name: console_token_refresh
        playbook: playbooks/console_token_refresh.yml
        project: config_as_code
        verbosity: 0
      - concurrent_jobs_enabled: false
        credentials:
        - ah_token_user
        - vault
        execution_environment: minimal
        inventory: config_as_code
        job_type: run
        limit: !unsafe '{{ env }}'
        name: collection_sync
        playbook: playbooks/sync_collections.yml
        project: config_as_code
        verbosity: 0
      controller_user_accounts_all: []
      controller_username: !unsafe '{{ controller_user | default(''admin'') }}'
      controller_validate_certs: false
      controller_workflows_all: []
      eda_credentials:
      - credential_type: Container Registry
        description: private automation hub
        name: hub
        secret: !unsafe '{{ ah_password }}'
        username: !unsafe '{{ ah_username }}'
      eda_decision_environments:
      - credential: hub
        description: my default decision environment
        image_url: !unsafe '{{ ah_host }}/de-minimal-rhel8'
        name: minimal
      eda_hostname: !unsafe '{{ eda_host | default(groups[''automationedacontroller''][0]) | default(groups[''automationeda''][0])
        }}:{{ eda_port | default(443) }}'
      eda_password: !unsafe '{{ eda_pass }}'
      eda_projects:
      - description: config as code eda
        interval: 10
        name: eda
        sync: true
        url: https://github.com/djdanielsson/eda.git
        wait: true
      eda_rulebook_activations:
      - awx_token: aap
        decision_environment: minimal
        description: Hook to listen for changes in gitea
        enabled: true
        name: gitea_hook
        project: eda
        rulebook: config_as_code.yml
        state: present
      eda_username: !unsafe '{{ eda_user | default(''admin'') }}'
      eda_validate_certs: false
      ee_create_ansible_config: false
      ee_image_push: true
      ee_list:
      - build_steps:
          append_final:
          - RUN dnf update -y
        dependencies:
          galaxy:
            collections:
            - infra.controller_configuration
            - infra.ah_configuration
            - infra.ee_utilities
            - infra.aap_utilities
            - awx.awx
          python:
          - ansible-lint
          - jmespath
          - netaddr
          system:
          - unzip
        name: config_as_code_ee
      ee_registry_dest: !unsafe '{{ ah_host }}'
      ee_registry_password: !unsafe '{{ ah_password }}'
      ee_registry_username: !unsafe '{{ ah_username }}'
      ee_validate_certs: false
      env: dev
...
