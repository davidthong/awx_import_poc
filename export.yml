---
- name: AWX export
  hosts: localhost
  connection: local
  vars:
    - git_user: davidthong
    - git_pat: "{{ github_pat }}"
    - repo_url: "https://{{ git_user }}:{{ git_pat }}@github.com/{{ git_user }}/awx_import_poc.git"
    - repo_dir: /tmp/export
    - controller_host: 192.168.0.224
  vars_files:
    - vault.yml

  tasks:

   - name: Clone the repository if it doesn't exist
     ansible.builtin.git:
      repo: "{{ repo_url }}"
      dest: "{{ repo_dir }}"
      clone: yes
      update: yes
     no_log: true
    
   - name: config email
     ansible.builtin.command:
      cmd: "git config --global user.email 'dthong@gmail.com'"
      chdir: "{{ repo_dir }}"
  
   - name: config name
     ansible.builtin.command:
      cmd: "git config --global user.name 'david thong'"
      chdir: "{{ repo_dir }}"

   ## More info on filtering : https://docs.ansible.com/ansible/latest/collections/awx/awx/export_module.html
   - name: Export job templates
     awx.awx.export:
       job_templates: 'all'
     register: register_job_templates

 # t0aGh62SSNryJjoTjx5MXz0P76mpju
   - debug: var=tower_host

   - name: Make a GET call to the Tower settings API
     uri:
      url: "https://{{ controller_host }}/api/v2/settings/"
      method: GET
      headers:
        Authorization: "Bearer {{ aap_bearer_token }}"
        Content-Type: "application/json"
      validate_certs: no  # Set to yes if using HTTPS with valid certs
     register: tower_settings_response

   - name: Convert registed output from export to job templates dictionary
     ansible.builtin.set_fact:
       job_templates: "{{ register_job_templates.assets.job_templates}}"

   - name: Convert JSON to YAML
     ansible.builtin.set_fact:
        yaml_data: "{{ job_templates | to_yaml }}"

   - debug: var=yaml_data

   - debug: var=tower_settings_response

   - name: Copy template to working directory
     ansible.builtin.template:
       src: job_templates.j2
       dest: "{{ repo_dir}}/output/job_templates.yml"

   - name: Add the file to the Git repository
     ansible.builtin.command:
      cmd: "git add . "
      chdir: "{{ repo_dir }}"

   - name: Commit the changes
     ansible.builtin.command:
      cmd: git commit -m 'update templates yaml'
      chdir: "{{ repo_dir }}"
     ignore_errors: yes
    
   - name: Push the changes to the remote repository
     ansible.builtin.command:
        cmd: "git push origin main"  
        chdir: "{{ repo_dir }}"